import org.apache.tools.ant.filters.ReplaceTokens

project.ext {
    packer = 'packer'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task processResources(type: Copy) {
    from('unattended') {
        include '**/*.xml'
        include '**/*.cfg'
        into "unattended"
    }
    from('packerfiles') {
        include '**/*.hcl'
        include '**/*.ps1'
        include '**/*.sh'
        into 'packerfiles'
    }
    filter(ReplaceTokens, tokens: [
        'username': username,
        'password': password,
        'rootpassword': rootpassword
    ])
    into(buildDir)
}

task buildWindowsBase(type:Exec) {
    println "Task buildWindowsBase"
    workingDir = buildDir
    executable = project.ext.packer
    args = ["build", 
            "-var-file=./packerfiles/iso/$configFile",
            "-var-file=./packerfiles/variables.pkrvars.hcl",
            "./packerfiles/windows_1_base.pkr.hcl" ]
    commandLine
}

task buildWindowsUpdates(type:Exec, dependsOn: "buildWindowsBase") {
    println "Task buildWindowsUpdates"
    workingDir = buildDir
    executable = project.ext.packer
    args = ["build", 
            "-var-file=./packerfiles/iso/$configFile",
            "-var-file=./packerfiles/variables.pkrvars.hcl",
            "./packerfiles/windows_2_updates.pkr.hcl"]
    commandLine
}

task buildWindowsPackages(type:Exec, dependsOn: "buildWindowsUpdates") {
    println "Task buildWindowsPackages"
    workingDir = buildDir
    executable = project.ext.packer
    args = ["build", 
            "-var-file=./packerfiles/iso/$configFile",
            "-var-file=./packerfiles/variables.pkrvars.hcl",
            "./packerfiles/windows_3_package.pkr.hcl" ]
    commandLine
}

task buildWindows() {
    println 'Task buildWindows'
    dependsOn 'processResources'
    dependsOn 'buildWindowsPackages'
    tasks.findByName('buildWindowsPackages').mustRunAfter 'processResources'
}

task buildLinux(type:Exec) {
    dependsOn 'processResources'
    workingDir = buildDir
    executable = project.ext.packer
    println "Building Linux $configFile at $workingDir"
    args = ["build", 
            "-var-file=./packerfiles/iso/$configFile",
            "-var-file=./packerfiles/variables.pkrvars.hcl",
            "./packerfiles/linux.pkr.hcl" ]
    commandLine
}